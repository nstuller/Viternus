//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Viternus.Web.com.ssdmf.websvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DMFwbsvcClassSoap", Namespace="http://tempuri.org/")]
    public partial class DMFwbsvcClass : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuery2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DMFwbsvcClass() {
            this.Url = global::Viternus.Web.Properties.Settings.Default.Viternus_Web_com_ssdmf_websvc_DMFwbsvcClass;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetQueryCompletedEventHandler GetQueryCompleted;
        
        /// <remarks/>
        public event GetQuery2CompletedEventHandler GetQuery2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuery(string UserName, string Password, string SSN, string FName, string LName, string ZipCode, string ZipLumpSum, string DOD, string DOB, string State, string MaxRows) {
            object[] results = this.Invoke("GetQuery", new object[] {
                        UserName,
                        Password,
                        SSN,
                        FName,
                        LName,
                        ZipCode,
                        ZipLumpSum,
                        DOD,
                        DOB,
                        State,
                        MaxRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryAsync(string UserName, string Password, string SSN, string FName, string LName, string ZipCode, string ZipLumpSum, string DOD, string DOB, string State, string MaxRows) {
            this.GetQueryAsync(UserName, Password, SSN, FName, LName, ZipCode, ZipLumpSum, DOD, DOB, State, MaxRows, null);
        }
        
        /// <remarks/>
        public void GetQueryAsync(string UserName, string Password, string SSN, string FName, string LName, string ZipCode, string ZipLumpSum, string DOD, string DOB, string State, string MaxRows, object userState) {
            if ((this.GetQueryOperationCompleted == null)) {
                this.GetQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryOperationCompleted);
            }
            this.InvokeAsync("GetQuery", new object[] {
                        UserName,
                        Password,
                        SSN,
                        FName,
                        LName,
                        ZipCode,
                        ZipLumpSum,
                        DOD,
                        DOB,
                        State,
                        MaxRows}, this.GetQueryOperationCompleted, userState);
        }
        
        private void OnGetQueryOperationCompleted(object arg) {
            if ((this.GetQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryCompleted(this, new GetQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuery2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuery2(string UserName, string Password, string SSN, string FName, string LName, string ZipCode, string ZipLumpSum, string DOD, string DOB, string State, string MaxRows, string ReturnURL) {
            object[] results = this.Invoke("GetQuery2", new object[] {
                        UserName,
                        Password,
                        SSN,
                        FName,
                        LName,
                        ZipCode,
                        ZipLumpSum,
                        DOD,
                        DOB,
                        State,
                        MaxRows,
                        ReturnURL});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuery2Async(string UserName, string Password, string SSN, string FName, string LName, string ZipCode, string ZipLumpSum, string DOD, string DOB, string State, string MaxRows, string ReturnURL) {
            this.GetQuery2Async(UserName, Password, SSN, FName, LName, ZipCode, ZipLumpSum, DOD, DOB, State, MaxRows, ReturnURL, null);
        }
        
        /// <remarks/>
        public void GetQuery2Async(string UserName, string Password, string SSN, string FName, string LName, string ZipCode, string ZipLumpSum, string DOD, string DOB, string State, string MaxRows, string ReturnURL, object userState) {
            if ((this.GetQuery2OperationCompleted == null)) {
                this.GetQuery2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuery2OperationCompleted);
            }
            this.InvokeAsync("GetQuery2", new object[] {
                        UserName,
                        Password,
                        SSN,
                        FName,
                        LName,
                        ZipCode,
                        ZipLumpSum,
                        DOD,
                        DOB,
                        State,
                        MaxRows,
                        ReturnURL}, this.GetQuery2OperationCompleted, userState);
        }
        
        private void OnGetQuery2OperationCompleted(object arg) {
            if ((this.GetQuery2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuery2Completed(this, new GetQuery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetQueryCompletedEventHandler(object sender, GetQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetQuery2CompletedEventHandler(object sender, GetQuery2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuery2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuery2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591